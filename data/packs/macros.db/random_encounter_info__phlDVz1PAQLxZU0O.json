{
	"_id": "phlDVz1PAQLxZU0O",
	"_key": "!macros!phlDVz1PAQLxZU0O",
	"author": "mu8H7NbWc0seFWcA",
	"command": "// Macro to get some information on random encounters\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nif (!actor || (actor.type === \"NPC\")) {\n\tui.notifications.warn(\"Can't draw from reactions without a Player actor assigned/selected!\");\n}\n\n// Starting Distance\nconst distanceTableID = pack.index.find(o => o.name === \"Random Encounter: Distance\")._id;\nconst distanceTable = await pack.getDocument(distanceTableID);\nconst distanceResult = await distanceTable.roll();\nconst distance = distanceResult.results[0].text;\n\n// Activity\nconst activityTableID = pack.index.find(o => o.name === \"Random Encounter: Activity\")._id;\nconst activityTable = await pack.getDocument(activityTableID);\nconst activityResult = await activityTable.roll();\nconst activity = activityResult.results[0].text;\n\n// Reaction\nconst reactionTableID = pack.index.find(o => o.name === \"Random Encounter: Reaction\")._id;\nconst reactionTable = await pack.getDocument(reactionTableID);\nconst actorCha = actor.system.abilities.cha.mod;\nconst reactionRoll = await new Roll(`2d6 + ${actorCha}`).evaluate({async: true});\nconst reaction = reactionTable.getResultsForRoll(reactionRoll._total)[0].text;\n\n// Treasure\nconst treasureRoll = await new Roll(\"1d100\").evaluate({ async: true });\nconst treasure = (treasureRoll._total >= 50) ? \"have treasure\" : \"have no treasure\";\n\nconst chatHtml = `\n<div class=\"shadowdark chat-card item-card\">\n\t<header class=\"card-header flexrow\">\n\t\t<img src=\"icons/environment/people/charge.webp\" />\n\t\t<h3>Random Encounter!</h3>\n\t</header>\n\n\t<div class=\"card-content\">\n\t\t<p>The monster(s) that <em>${actor.name}</em> has run into are...</p>\n\t\t<p>At a distance of: <b>${distance}</b></p>\n\t\t<p>Currently doing: <b>${activity}</b></p>\n\t\t<p>And their reaction is: <b>${reaction}</b></p>\n\t\t<p>They <b>${treasure}</b></p>\n\t</div>\n</div>\n`;\n\nconst chatData = {\n\tuser: game.user._id,\n\tspeaker: ChatMessage.getSpeaker(),\n\tcontent: chatHtml,\n\twhisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});",
	"folder": null,
	"img": "icons/environment/people/charge.webp",
	"name": "Random Encounter Info",
	"scope": "global",
	"type": "script"
}
